// <auto-generated />
using System;
using BookStore.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookStore.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220713073842_init1")]
    partial class init1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookStore.Domain.Entities.Concrete.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 376, DateTimeKind.Local).AddTicks(6887),
                            FirstName = "Michelle",
                            LastName = "Alexander",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1674),
                            FirstName = "Stephen E.",
                            LastName = "Ambrose",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1715),
                            FirstName = "Margaret",
                            LastName = "Atwood",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1717),
                            FirstName = "Jane",
                            LastName = "Austen",
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1718),
                            FirstName = "James",
                            LastName = "Baldwin",
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1719),
                            FirstName = "Emily",
                            LastName = "Bronte",
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1721),
                            FirstName = "Agatha",
                            LastName = "Christie",
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1722),
                            FirstName = "Ta-Nehisi",
                            LastName = "Coates",
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1723),
                            FirstName = "Jared",
                            LastName = "Diamond",
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1724),
                            FirstName = "Joan",
                            LastName = "Didion",
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1725),
                            FirstName = "Daphne",
                            LastName = "Du Maurier",
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1726),
                            FirstName = "Tina",
                            LastName = "Fey",
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1727),
                            FirstName = "Roxane",
                            LastName = "Gay",
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1728),
                            FirstName = "Dashiel",
                            LastName = "Hammett",
                            Status = 1
                        },
                        new
                        {
                            Id = 15,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1729),
                            FirstName = "Frank",
                            LastName = "Herbert",
                            Status = 1
                        },
                        new
                        {
                            Id = 16,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1730),
                            FirstName = "Aldous",
                            LastName = "Huxley",
                            Status = 1
                        },
                        new
                        {
                            Id = 17,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1732),
                            FirstName = "Stieg",
                            LastName = "Larsson",
                            Status = 1
                        },
                        new
                        {
                            Id = 18,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1733),
                            FirstName = "David",
                            LastName = "McCullough",
                            Status = 1
                        },
                        new
                        {
                            Id = 19,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1734),
                            FirstName = "Toni",
                            LastName = "Morrison",
                            Status = 1
                        },
                        new
                        {
                            Id = 20,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1735),
                            FirstName = "George",
                            LastName = "Orwell",
                            Status = 1
                        },
                        new
                        {
                            Id = 21,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1736),
                            FirstName = "Mary",
                            LastName = "Shelley",
                            Status = 1
                        },
                        new
                        {
                            Id = 22,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1737),
                            FirstName = "Sun",
                            LastName = "Tzu",
                            Status = 1
                        },
                        new
                        {
                            Id = 23,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1739),
                            FirstName = "Augusten",
                            LastName = "Burroughs",
                            Status = 1
                        },
                        new
                        {
                            Id = 25,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1740),
                            FirstName = "JK",
                            LastName = "Rowling",
                            Status = 1
                        },
                        new
                        {
                            Id = 26,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 380, DateTimeKind.Local).AddTicks(1741),
                            FirstName = "Seth",
                            LastName = "Grahame-Smith",
                            Status = 1
                        });
                });

            modelBuilder.Entity("BookStore.Domain.Entities.Concrete.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenreId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(4578),
                            GenreId = "history",
                            Price = 18.0,
                            Status = 1,
                            Title = "1776"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5565),
                            GenreId = "scifi",
                            Price = 5.5,
                            Status = 1,
                            Title = "1984"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5604),
                            GenreId = "mystery",
                            Price = 4.5,
                            Status = 1,
                            Title = "And Then There Were None"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5605),
                            GenreId = "history",
                            Price = 11.5,
                            Status = 1,
                            Title = "Band of Brothers"
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5606),
                            GenreId = "novel",
                            Price = 10.99,
                            Status = 1,
                            Title = "Beloved"
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5608),
                            GenreId = "memoir",
                            Price = 13.5,
                            Status = 1,
                            Title = "Between the World and Me"
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5609),
                            GenreId = "memoir",
                            Price = 4.25,
                            Status = 1,
                            Title = "Bossypants"
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5610),
                            GenreId = "scifi",
                            Price = 16.25,
                            Status = 1,
                            Title = "Brave New World"
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5611),
                            GenreId = "history",
                            Price = 15.0,
                            Status = 1,
                            Title = "D-Day"
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5612),
                            GenreId = "memoir",
                            Price = 12.5,
                            Status = 1,
                            Title = "Down and Out in Paris and London"
                        },
                        new
                        {
                            Id = 11,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5613),
                            GenreId = "scifi",
                            Price = 8.75,
                            Status = 1,
                            Title = "Dune"
                        },
                        new
                        {
                            Id = 12,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5614),
                            GenreId = "novel",
                            Price = 9.0,
                            Status = 1,
                            Title = "Emma"
                        },
                        new
                        {
                            Id = 13,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5615),
                            GenreId = "scifi",
                            Price = 6.5,
                            Status = 1,
                            Title = "Frankenstein"
                        },
                        new
                        {
                            Id = 14,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5616),
                            GenreId = "novel",
                            Price = 10.25,
                            Status = 1,
                            Title = "Go Tell it on the Mountain"
                        },
                        new
                        {
                            Id = 15,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5618),
                            GenreId = "history",
                            Price = 15.5,
                            Status = 1,
                            Title = "Guns, Germs, and Steel"
                        },
                        new
                        {
                            Id = 16,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5619),
                            GenreId = "memoir",
                            Price = 14.5,
                            Status = 1,
                            Title = "Hunger"
                        },
                        new
                        {
                            Id = 17,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5620),
                            GenreId = "mystery",
                            Price = 6.75,
                            Status = 1,
                            Title = "Murder on the Orient Express"
                        },
                        new
                        {
                            Id = 18,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5621),
                            GenreId = "novel",
                            Price = 8.5,
                            Status = 1,
                            Title = "Pride and Prejudice"
                        },
                        new
                        {
                            Id = 19,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5622),
                            GenreId = "mystery",
                            Price = 10.99,
                            Status = 1,
                            Title = "Rebecca"
                        },
                        new
                        {
                            Id = 20,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5623),
                            GenreId = "history",
                            Price = 5.75,
                            Status = 1,
                            Title = "The Art of War"
                        },
                        new
                        {
                            Id = 21,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5624),
                            GenreId = "mystery",
                            Price = 8.5,
                            Status = 1,
                            Title = "The Girl with the Dragon Tattoo"
                        },
                        new
                        {
                            Id = 22,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5625),
                            GenreId = "scifi",
                            Price = 12.5,
                            Status = 1,
                            Title = "The Handmaid's Tale"
                        },
                        new
                        {
                            Id = 23,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5626),
                            GenreId = "mystery",
                            Price = 10.99,
                            Status = 1,
                            Title = "The Maltese Falcon"
                        },
                        new
                        {
                            Id = 24,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5627),
                            GenreId = "history",
                            Price = 13.75,
                            Status = 1,
                            Title = "The New Jim Crow"
                        },
                        new
                        {
                            Id = 25,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5628),
                            GenreId = "memoir",
                            Price = 13.5,
                            Status = 1,
                            Title = "The Year of Magical Thinking"
                        },
                        new
                        {
                            Id = 26,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5629),
                            GenreId = "novel",
                            Price = 9.0,
                            Status = 1,
                            Title = "Wuthering Heights"
                        },
                        new
                        {
                            Id = 27,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5630),
                            GenreId = "memoir",
                            Price = 11.0,
                            Status = 1,
                            Title = "Running With Scissors"
                        },
                        new
                        {
                            Id = 28,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5631),
                            GenreId = "novel",
                            Price = 8.75,
                            Status = 1,
                            Title = "Pride and Prejudice and Zombies"
                        },
                        new
                        {
                            Id = 29,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(5633),
                            GenreId = "novel",
                            Price = 9.75,
                            Status = 1,
                            Title = "Harry Potter and the Sorcerer's Stone"
                        });
                });

            modelBuilder.Entity("BookStore.Domain.Entities.Concrete.BookAuthor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookId");

                    b.ToTable("BookAuthors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 18,
                            BookId = 1,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(5846),
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 20,
                            BookId = 2,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6513),
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 7,
                            BookId = 3,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6537),
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            BookId = 4,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6538),
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 19,
                            BookId = 5,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6539),
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 8,
                            BookId = 6,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6541),
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 12,
                            BookId = 7,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6542),
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 16,
                            BookId = 8,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6543),
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 2,
                            BookId = 9,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6544),
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 20,
                            BookId = 10,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6545),
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 15,
                            BookId = 11,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6546),
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 4,
                            BookId = 12,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6547),
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 21,
                            BookId = 13,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6548),
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 5,
                            BookId = 14,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6549),
                            Status = 1
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 9,
                            BookId = 15,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6550),
                            Status = 1
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 13,
                            BookId = 16,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6586),
                            Status = 1
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 7,
                            BookId = 17,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6587),
                            Status = 1
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 4,
                            BookId = 18,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6588),
                            Status = 1
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 11,
                            BookId = 19,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6589),
                            Status = 1
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 22,
                            BookId = 20,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6590),
                            Status = 1
                        },
                        new
                        {
                            Id = 21,
                            AuthorId = 17,
                            BookId = 21,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6591),
                            Status = 1
                        },
                        new
                        {
                            Id = 22,
                            AuthorId = 3,
                            BookId = 22,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6592),
                            Status = 1
                        },
                        new
                        {
                            Id = 23,
                            AuthorId = 14,
                            BookId = 23,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6593),
                            Status = 1
                        },
                        new
                        {
                            Id = 24,
                            AuthorId = 1,
                            BookId = 24,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6594),
                            Status = 1
                        },
                        new
                        {
                            Id = 25,
                            AuthorId = 10,
                            BookId = 25,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6595),
                            Status = 1
                        },
                        new
                        {
                            Id = 26,
                            AuthorId = 6,
                            BookId = 26,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6596),
                            Status = 1
                        },
                        new
                        {
                            Id = 27,
                            AuthorId = 23,
                            BookId = 27,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6597),
                            Status = 1
                        },
                        new
                        {
                            Id = 28,
                            AuthorId = 4,
                            BookId = 28,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6598),
                            Status = 1
                        },
                        new
                        {
                            Id = 29,
                            AuthorId = 26,
                            BookId = 28,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6599),
                            Status = 1
                        },
                        new
                        {
                            Id = 30,
                            AuthorId = 25,
                            BookId = 29,
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 381, DateTimeKind.Local).AddTicks(6600),
                            Status = 1
                        });
                });

            modelBuilder.Entity("BookStore.Domain.Entities.Concrete.Genre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = "novel",
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(8182),
                            Name = "Novel",
                            Status = 1
                        },
                        new
                        {
                            Id = "memoir",
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(8654),
                            Name = "Memoir",
                            Status = 1
                        },
                        new
                        {
                            Id = "mystery",
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(8673),
                            Name = "Mystery",
                            Status = 1
                        },
                        new
                        {
                            Id = "scifi",
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(8674),
                            Name = "Science Finction",
                            Status = 1
                        },
                        new
                        {
                            Id = "history",
                            CreateDate = new DateTime(2022, 7, 13, 10, 38, 42, 382, DateTimeKind.Local).AddTicks(8675),
                            Name = "History",
                            Status = 1
                        });
                });

            modelBuilder.Entity("BookStore.Domain.Entities.Concrete.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BookStore.Domain.Entities.Concrete.Book", b =>
                {
                    b.HasOne("BookStore.Domain.Entities.Concrete.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreId");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("BookStore.Domain.Entities.Concrete.BookAuthor", b =>
                {
                    b.HasOne("BookStore.Domain.Entities.Concrete.Author", "Author")
                        .WithMany("BookAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStore.Domain.Entities.Concrete.Book", "Book")
                        .WithMany("BookAuthors")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BookStore.Domain.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BookStore.Domain.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStore.Domain.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BookStore.Domain.Entities.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookStore.Domain.Entities.Concrete.Author", b =>
                {
                    b.Navigation("BookAuthors");
                });

            modelBuilder.Entity("BookStore.Domain.Entities.Concrete.Book", b =>
                {
                    b.Navigation("BookAuthors");
                });

            modelBuilder.Entity("BookStore.Domain.Entities.Concrete.Genre", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
