@model BookListViewModel
@{
    ViewData["Title"] = "List";
    RouteDictionary current = Model.CurrentRoute;
    RouteDictionary routes = Model.CurrentRoute.Clone();
}

<h1>Book Catalog</h1>

<div class="row">
    <div class="col-9">
        <form asp-controller="Book" asp-action="Filter" method="post" class="form-inline">
            <label>Author:</label>
            <select name="filter" class="form-control m-2"
                    asp-items="@(new SelectList(Model.Authors,"Id","FullName", current.AuthorFilter))">
                <option value="@BookGridDTO.DefaultFilter">All</option>
            </select>

            <label>Genre:</label>
            <select name="filter" class="form-control m-2"
                    asp-items="@(new SelectList(Model.Genres,"Id","Name", current.GenreFilter))">
                <option value="@BookGridDTO.DefaultFilter">All</option>
            </select>

            <label>Price:</label>
            <select name="filter" class="form-control m-2"
                    asp-items="@(new SelectList(Model.Prices,"Key","Value", current.PriceFilter))">
                <option value="@BookGridDTO.DefaultFilter">All</option>
            </select>

            <button type="submit" class="btn btn-primary mr-2">Filter</button>
            <button type="submit" class="btn btn-primary" name="clear" value="true">Clear</button>
        </form>
    </div>
    <div class="col">
        <form asp-controller="Book" asp-action="PageSize" method="post" class="form-inline">
            <label>Page Size:</label>
            <select name="pageSize" class="form-control m-2"
                    asp-items="@(new SelectList(Model.PageSize, current.PageSize))">    </select>
            <button type="submit" class="btn btn-primary m-2">Save</button>
        </form>
    </div>
</div>

<table class="table table-bordered table-striped table-sm">
    <thead class="thead-dark">
        <tr>
            <th>
                @{routes.SetSortAndDirection(nameof(Book.Title), current); }
                <a asp-controller="Book" asp-action="List" asp-all-route-data="@routes" class="text-white">Title</a>
            </th>
            <th>Author(s)</th>
            <th>
                @{ routes.SetSortAndDirection(nameof(Genre), current);}
                <a asp-controller="Book" asp-action="List" asp-all-route-data="@routes" class="text-white">Genre</a>
            </th>
            <th>
                @{ routes.SetSortAndDirection(nameof(Book.Price), current);}
                <a asp-controller="Book" asp-action="List" asp-all-route-data="@routes" class="text-white">Price</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (Book book in Model.Books)
        {
            <tr>
                <td>
                    <a asp-controller="Book" asp-action="Details" asp-route-id="@book.Id">@book.Title</a>
                </td>
                <td>
                    @foreach (var bookAuthor in book.BookAuthors)
                    {
                        <p>
                            <a asp-controller="Author" asp-action="Details" asp-route-id="@book.Id">@book.Title</a>
                        </p>
                    }
                </td>
                <td>@book.Genre.Name</td>
                <td>@book.Price.ToString("c")</td>
                <td>
                    <button type="submit" name="id" value="@book.Id" class="btn btn-primary">Add to Cart</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    @*
        Rota sozlugunu (route dictionary) mevcut rota degerlerine sifirliyoruz. Bu yukarida filtreleme baglantilarini olustururken yapilan degisiklikleri temizlemek icin gereklidir. Yani route klonlamaya yarayan Clone() metodumuz vasitasiyla, route klonluyoruz ki mevcut rota segmentlerinin kazandigi degerler, current route in uzerine yazilmasin.*@
    routes = Model.CurrentRoute.Clone();

    for (int i = 0; i <= Model.TotalPage; i++)
    {
        @*"i" icinde sayfa numarasi ile rota sozlugunu (route dictionary) guncelliyoruz ve ardından asp cagri baglantisi icin rota segmentleri olusturulmasi icin guncellemis rota sozlugunu kullaniyoruz.*@
        routes.PageNumber = i;
        <a asp-controller="Book" asp-action="List" asp-all-route-data="@routes" class="btn btn-sm btn-outline-primary
       @NavBarViewModel.Active(i,current.PageNumber)">@i</a>
}
}